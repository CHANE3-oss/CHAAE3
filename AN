#!/usr/bin/env bash

down=/storage/emulated/0/Download
tx=$HOME/AN
dpak=/storage/emulated/0/Download/pak

source etc/banner #BANNER
# Banner Add
echo -e "executing: ${LIGHTGREEN}ANIANE3${NOCOLOR}"
echo "-----------------------"




#THE FILE AUTO
if [[ -d "output" ]]
  then
    echo ""
  else
    echo ""
    mkdir output
fi
cd $down
if [[ -d "pak" ]]
  then
    echo ""
  else
    echo ""
    mkdir /sdcard/download/pak
fi
cd $tx



#CACHE MAKER
function cache {
echo -e "
mv $opt $dpak
if [[ -d "output" ]]
  then
    rm -rf output
    rm cache
  else
    mv $down/output $HOME/AN
    rm -rf output
    rm cache
fi " >cache
   chmod +x cache
}






mvpakout () {
  cd $dpak
  mv $opt $tx
  cd $tx
  unpacking
  rm -rf cache
   cache
}

mvpakin () {
   mv $down/output $tx
   cd $tx
   repacking
}




echo "starting"
sleep 2











#SUB PAKPROGRAM 64BIT

function pakc164 {
    qemu-i386 $PREFIX/share/quickbms/quickbms_4gb_files -w -r etc/tools.bms $opt output
    sleep 1
    bash cache
    
}
function pakc264 {
    qemu-i386 $PREFIX/share/quickbms/quickbms_4gb_files -w -r -r etc/tools.bms $opt output
    sleep 1
    bash cache
    
}
function pakc364 {
     qemu-i386 $PREFIX/share/quickbms/quickbms_4gb_files -w -r -r -r etc/tools.bms $opt output
    sleep 1
    bash cache
    
}

#SUB PAKPROGRAM 32BIT

function pakc1 {
    qemu-i386 $PREFIX/share/quickbms/quickbms -w -r etc/tools.bms $opt output
    sleep 1
    bash cache
    
}
function pakc2 {
    qemu-i386 $PREFIX/share/quickbms/quickbms -w -r -r etc/tools.bms $opt output
    sleep 1
    bash cache
    
}
function pakc3 {
     qemu-i386 $PREFIX/share/quickbms/quickbms -w -r -r -r etc/tools.bms $opt output
    sleep 1
    bash cache
    
}

#MANUAL PROGRAM
function pakmanual {
  echo -e "${RED}PLEASE TYPE GREEN Text CODE IN YOUR COMMAND${NOCOLOR}"
  echo ""
  echo -e "${GREEN}qemu-i386 quickbms -w -r etc/tools.bms $opt output${NOCOLOR} for option 1"
  echo ""
  echo -e "${GREEN}qemu-i386 quickbms -w -r -r etc/tools.bms $opt output${NOCOLOR} for option 2"
  echo ""
  echo -e "${GREEN}qemu-i386 quickbms -w -r -r -r etc/tools.bms $opt output${NOCOLOR} for option 3"
  echo ""
  echo -e "${WHITE}不同的 3 个选项${NOCOLOR}"
  echo -e "选项[1]为压缩选项${RED}'无法将文件（输出）压缩得比原始文件（输入）更大${NOCOLOR}'但这个很好选择"
  echo -e "选项[2]为压缩选项${BLUE}'使用此项压缩文件（输出）使其大于原始文件（输入）${NOCOLOR}' ${RED}警告:${NOCOLOR}这将破坏脚本中的算法值/pak file"
  echo -e "选项[3]为压缩选项 ${BLUE}'使用此项压缩文件（输出）使其大于原始文件（输入）${NOCOLOR}'${RED}警告:${NOCOLOR} 当选项 2 不起作用时，可以使用此选项。但此文件更有可能起作用，但如果脚本不支持，则文件可能会损坏"
  echo -e "你可以一个一个地测试，不用解压，而是在游戏中"
  echo -e "之后运行“Bash CACHE”来删除缓存"
  exit
}


#MODE 32BIT PAK
function pak32re {
echo -e "选项[1]为压缩选项${RED}'无法将文件（输出）压缩得比原始文件（输入）更大${NOCOLOR}'但这个很好选择"
  echo -e "选项[2]为压缩选项${BLUE}'使用此项压缩文件（输出）使其大于原始文件（输入）${NOCOLOR}' ${RED}警告:${NOCOLOR}这将破坏脚本中的算法值/pak file"
  echo -e "选项[3]为压缩选项 ${BLUE}'使用此项压缩文件（输出）使其大于原始文件（输入）${NOCOLOR}'${RED}警告:${NOCOLOR} 当选项 2 不起作用时，可以使用此选项。但此文件更有可能起作用，但如果脚本不支持，则文件可能会损坏"
PS3='Please enter your choice: '
options=("选项 1" "选项 2" "选项 3" "退出")
select type in "${options[@]}"
do
    case $type in
        "opt 1")
            pakc1
            break
            
            ;;
        "opt 2")
            pakc2
            break
            
            ;;
        "opt 3")
            pakc3
            break
            
            ;;
        "Quit")
            exit
            ;;
        *) echo "invalid option $REPLY";;
    esac
done 
}

#REPACK 64 BIT 
function pak64re {
echo -e "选项[1]为压缩选项${RED}'无法将文件（输出）压缩得比原始文件（输入）更大${NOCOLOR}'但这个很好选择"
  echo -e "选项[2]为压缩选项${BLUE}'使用此项压缩文件（输出）使其大于原始文件（输入）${NOCOLOR}' ${RED}警告:${NOCOLOR}这将破坏脚本中的算法值/pak file"
  echo -e "选项[3]为压缩选项 ${BLUE}'使用此项压缩文件（输出）使其大于原始文件（输入）${NOCOLOR}'${RED}警告:${NOCOLOR} 当选项 2 不起作用时，可以使用此选项。但此文件更有可能起作用，但如果脚本不支持，则文件可能会损坏"
PS3='Please enter your choice: '
options=("选项 1" "选项 2" "选项 3" "退出")
select type in "${options[@]}"
do
    case $type in
        "opt 1")
            pakc164
            break
            
            ;;
        "opt 2")
            pakc264
            break
            
            ;;
        "opt 3")
            pakc364
            break
            
            ;;
        "Quit")
            exit
            ;;
        *) echo "invalid option $REPLY";;
    esac
done 
}

#REPACK V2
function pubgbitre {
echo -e "请选择位数信息"
echo -e "安卓 10-11 64bit"
echo -e "安卓 6-9 32bit"
PS3='PLEASE CHOOSE: '
options=("32bit" "64bit" "退出")
select bit in "${options[@]}"
do
    case $bit in
        "32bit")
            pak32re
            break
            ;;
        "64bit")
            pak64re
            break
            
            ;;
        "Quit")
            exit
            ;;
        *) echo "invalid option $REPLY";;
    esac
done 
}

#REPACK  v1
function repacking {
echo -e "请选择需要打包的文件夹"
echo -e "最好选择手动进行才能打包出完美的Pak"
PS3='Please enter your choice: '
options=("手动" "自动" "退出")
select pro in "${options[@]}"
do
    case $pro in
        "manual")
            pakmanual
            ;;
        "auto")
            pubgbitre
            break
            
            ;;
        "Quit")
            break
            ;;
        *) echo "invalid option $REPLY";;
    esac
done 
}
























#SUB UNPACK 64BIT&32BIT

function pak32un {
    qemu-i386 $PREFIX/share/quickbms/quickbms etc/tools.bms $opt output
    rm -rf $down/output
    mv output $down
}
function pak64un {
    qemu-i386 $PREFIX/share/quickbms/quickbms_4gb_files etc/tools.bms $opt output
    rm -rf $down/output
    mv output $down
}

#UNPACKING PROGRAM
function unpacking {
echo -e "请选择需要的安卓版本+位数版本"
echo -e "安卓 10-11 64bit"
echo -e "安卓 6-9 32bit"
PS3='请输入选择项: '
options=("32bit" "64bit" "退出")
select bit in "${options[@]}"
do
    case $bit in
        "32bit")
            pak32un
            break
            ;;
        "64bit")
            pak64un
            break
            ;;
        "Quit")
            break
            ;;
        *) echo "invalid option $REPLY";;
    esac
done 
}









#HOW TO USE 
HTU () {
clear
source etc/banner
# Banner Add
echo -e "executing: ${LIGHTGREEN}ThePAK${NOCOLOR}"
echo "-----------------------"
echo -e "${RED}官方使用规则-教程${NOCOLOR}"
echo -e "1.在 DOWNLOAD 文件夹创建 'pak' 名称的文件夹"
echo -e "${DARKGREY}不能提取两个文件否则会错误❌${NOCOLOR}"
echo -e "3.这样就可以正常运行本工具"
echo -e "解包后找到在 DOWNLOAD 路径找到 'OUTPUT' 就是解包后的值"
echo -e "重新打包后 'OUTPUT' 文件夹会自动删除"
echo -e "这是为了防止错误迫不得已的操作"
echo -e "${RED}NOTE${NOCOLOR}: 解包后Pak文件会自动消失打包后重新出现"
echo -e "
${LIGHTGREY}MODIFIED BY 阿念[E3]
${RED}TELEGRAM: ${WHITE}https://t.me/CHAAE3
"
}
























#SUB2 PROGRAM
function unpack {
cd $dpak
prompt="请选择要解压的文件:"
options=( $(find *.pak) )

PS3="$prompt "
select opt in "${options[@]}" "退出" ; do 
    if (( REPLY == 1 + ${#options[@]} )) ; then
        exit

    elif (( REPLY > 0 && REPLY <= ${#options[@]} )) ; then
        echo  "你选择了 $opt，它是文件"
         mvpakout
         break
    else
        echo "选项无效。请尝试其他选项."
    fi
done
}

function repack {
prompt="请选择要打包的文件:"
options=( $(find *.pak) )

PS3="$prompt "
select opt in "${options[@]}" "退出" ; do 
    if (( REPLY == 1 + ${#options[@]} )) ; then
        exit

    elif (( REPLY > 0 && REPLY <= ${#options[@]} )) ; then
        echo  "You picked $opt which is file $REPLY"
         mvpakin
         break
    else
        echo "Invalid option. Try another one."
    fi
done
}












#HEAD PROGRAM
PS3='请输入您的选择: '
options=("解包文件" "打包文件" "放回文件" "使用教程" "退出程序")
select dadi in "${options[@]}"
do
    case $dadi in
        "解包文件")
            unpack
            ;;
        "打包文件")
            repack
            
            ;;
        "使用教程")
            HTU
            
            ;;
        "退出程序")
            break
            ;;
        "放回文件")
            bash cache
            exit
            ;;
        *) echo "无效选项 $REPLY";;
    esac
done
